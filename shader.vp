#version 330 core

layout(location = 0) in vec4 in_pos;
layout(location = 1) in vec2 in_tex;
layout(location = 2) in vec4 in_normal;

uniform mat4 projection_matrix;
uniform mat4 camera_matrix;
uniform mat4 light_matrix;
uniform mat4 trans_matrix;
uniform mat4 normal_matrix;

out vec3 normal;
out vec3 model_vector;
out vec2 tex_coord;
out vec3 shadow;

void main()
{
   vec4 world_vector = trans_matrix * in_pos;

   vec4 projected_light = light_matrix * world_vector;
   // Project into [-1, 1] space.
   vec3 shadow_pre = projected_light.xyz / projected_light.w;
   // Adjust for [0, 1] space.
   shadow = 0.5 * (shadow_pre + 1.0);

   gl_Position = projection_matrix * camera_matrix * world_vector;

   normal = (normal_matrix * in_normal).xyz;
   model_vector = world_vector.xyz;

   tex_coord = in_tex;
}

